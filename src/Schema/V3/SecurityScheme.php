<?php

namespace OpenAPI\Schema\V3;

use OpenAPI\Schema\AbstractObject;

class SecurityScheme extends AbstractObject
{
    /**
     * REQUIRED. The type of the security scheme. Valid values are "apiKey", "http", "oauth2", "openIdConnect".
     *
     * @var string
     */
    public string $type;

    /**
     * A short description for security scheme. CommonMark syntax MAY be used for rich text representation.
     *
     * @var string|null
     */
    public ?string $description = null;

    /**
     * REQUIRED. The name of the header, query or cookie parameter to be used.
     *
     * @var string|null
     */
    public ?string $name = null;

    /**
     * REQUIRED. The location of the API key. Valid values are "query", "header" or "cookie".
     *
     * @var string|null
     */
    public ?string $in = null;

    /**
     * REQUIRED. The name of the HTTP Authorization scheme to be used in the Authorization header as defined in
     * [RFC7235]. The values used SHOULD be registered in the IANA Authentication Scheme registry.
     *
     * @var string|null
     */
    public ?string $scheme = null;

    /**
     * A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an
     * authorization server, so this information is primarily for documentation purposes.
     *
     * @var string|null
     */
    public ?string $bearerFormat = null;

    /**
     * REQUIRED. An object containing configuration information for the flow types supported.
     *
     * @var OAuthFlows|null
     */
    public ?OAuthFlows $flows = null;

    /**
     * REQUIRED. OpenId Connect URL to discover OAuth2 configuration values. This MUST be in the form of a URL.
     *
     * @var string|null
     */
    public ?string $openIdConnectUrl = null;

    protected array $fieldPatterns = [
        '/^x-.*/' => true
    ];
}
